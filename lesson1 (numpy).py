#!/usr/bin/env python
# coding: utf-8

# In[ ]:





# In[ ]:


#Задание 1
#Создайте массив Numpy под названием a размером 5x2, то есть состоящий из 5 строк и 2 столбцов. 
#Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11, 10, 7. 
#Будем считать, что каждый столбец - это признак, а строка - наблюдение. Затем найдите среднее значение по каждому признаку, 
#используя метод mean массива Numpy. Результат запишите в массив mean_a, в нем должно быть 2 элемента.


# In[3]:


import numpy as np


# In[35]:


a = [[1, 6],
     [2, 8],
     [3, 11],
     [3, 10],
     [1, 7]]


# In[5]:


a


# In[6]:


b = np.array(a)
b


# In[7]:


mean_a = b.mean(axis = 0)
mean_a


# In[ ]:


#Задание 2
#Вычислите массив a_centered, отняв от значений массива “а” средние значения соответствующих признаков, 
#содержащиеся в массиве mean_a. Вычисление должно производиться в одно действие. Получившийся массив должен иметь размер 5x2.


# In[8]:


a_centered = b - mean_a
a_centered


# In[ ]:


#Задание 3
#Найдите скалярное произведение столбцов массива a_centered. В результате должна получиться величина a_centered_sp. 
#Затем поделите a_centered_sp на N-1, где N - число наблюдений.


# In[32]:


a1 = a_centered[:, 0]
a2 = a_centered[:, 1]
a_centered_sp = np.dot(a1, a2)
x = a_centered_sp / (5 - 1)
x


# #Задание 4
# #В этом задании проверьте получившееся число, вычислив ковариацию еще одним способом - с помощью функции np.cov. 
# #В качестве аргумента m функция np.cov должна принимать транспонированный массив “a”. В получившейся ковариационной матрице 
# #(массив Numpy размером 2x2) искомое значение ковариации будет равно элементу в строке с индексом 0 и столбце с индексом 1.

# In[40]:


a_tr = b.transpose()
x_x = np.cov(a_tr)
x_x[0,1]


# In[ ]:




